package component:tasklist;

interface tasklist {
    record position {
        x: u32,
        y: u32,
    }

    record size {
        width: u32,
        height: u32,
    }

    record task {
        id: string,
        name: string,
        position: position,
        size: option<size>,
    }

    record transition {
        id: string,
        source-task-id: string,
        target-task-id: string,
    }

    resource tasklist-model {
        id: func() -> string;
        tasks: func() -> list<task>;
        transitions: func() -> list<transition>;
        
        add-task: func(position: position) -> task;
        remove-task: func(task-id: string);
        resize-task: func(task-id: string, size: size);
        move-task: func(task-id: string, position: position);

        add-transition: func(source-task-id: string, target-task-id: string) -> transition;
        remove-transition: func(transition-id: string);

        export-to-json: func() -> string;
        import-from-json: func(json: string);

        create-model-for-empty-file: static func() -> tasklist-model;

    }
}

/// An example world for the component to target.
world example {
    //export hello-world: func() -> string;
    //export validate-task-name: func(name: string) -> bool;
    export tasklist;
}
